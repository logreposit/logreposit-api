logreposit:
  message-sender-retry-count: 5
  message-sender-retry-initial-back-off-interval: 1100
  message-sender-back-off-multiplier: 1.5
  queue-name: q.logreposit_api
  message-listener-enabled: true
  message-retry-intervals: 10000,30000,300000

mqtt:
  #enabled: true
  enabled: false
  brokerType: MOSQUITTO
  host: 127.0.0.1
  port: 1883
  # In case of MOSQUITTO, the admin MQTT credentials
  # In case of EMQX, the administrator login credentials (HTTP API)
  # OLD
  username: administrator
  #password: password
  password: administrator1
  emqx:
    managementEndpoint: http://127.0.0.1:18083

logging:
  pattern:
    console: "%clr(%d{\"yyyy-MM-dd'T'HH:mm:ss,SSSXXX\", UTC}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID: }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr([%X{correlationId:-}]){yellow} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file: "%d{\"yyyy-MM-dd'T'HH:mm:ss,SSSXXX\", UTC} ${LOG_LEVEL_PATTERN:%5p} ${PID: } --- [%t] [%X{correlationId:-}] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  file:
    name: logs/logreposit-api.log

server:
    port: "${port:8080}"

spring:
  jackson:
    serialization:
      write-dates-as-timestamps: false
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        retry:
          enabled: true
  data:
    mongodb:
      host: localhost
      port: 27017
      database: logrepositapi
  mvc:
    throw-exception-if-no-handler-found: true
    static-path-pattern: /reference/**
  web:
    resources:
      # add-mappings: false
      static-locations:
        - 'classpath:/static/'

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - prometheus
  prometheus:
    metrics:
      export:
        descriptions: false
